# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Phenotype(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, trait_id: int=None, trait_name: str=None, trait_type: str=None, trait_description: str=None):  # noqa: E501
        """Phenotype - a model defined in Swagger

        :param trait_id: The trait_id of this Phenotype.  # noqa: E501
        :type trait_id: int
        :param trait_name: The trait_name of this Phenotype.  # noqa: E501
        :type trait_name: str
        :param trait_type: The trait_type of this Phenotype.  # noqa: E501
        :type trait_type: str
        :param trait_description: The trait_description of this Phenotype.  # noqa: E501
        :type trait_description: str
        """
        self.swagger_types = {
            'trait_id': int,
            'trait_name': str,
            'trait_type': str,
            'trait_description': str
        }

        self.attribute_map = {
            'trait_id': 'trait_id',
            'trait_name': 'trait_name',
            'trait_type': 'trait_type',
            'trait_description': 'trait_description'
        }

        self._trait_id = trait_id
        self._trait_name = trait_name
        self._trait_type = trait_type
        self._trait_description = trait_description

    @classmethod
    def from_dict(cls, dikt) -> 'Phenotype':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Phenotype of this Phenotype.  # noqa: E501
        :rtype: Phenotype
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trait_id(self) -> int:
        """Gets the trait_id of this Phenotype.


        :return: The trait_id of this Phenotype.
        :rtype: int
        """
        return self._trait_id

    @trait_id.setter
    def trait_id(self, trait_id: int):
        """Sets the trait_id of this Phenotype.


        :param trait_id: The trait_id of this Phenotype.
        :type trait_id: int
        """

        self._trait_id = trait_id

    @property
    def trait_name(self) -> str:
        """Gets the trait_name of this Phenotype.


        :return: The trait_name of this Phenotype.
        :rtype: str
        """
        return self._trait_name

    @trait_name.setter
    def trait_name(self, trait_name: str):
        """Sets the trait_name of this Phenotype.


        :param trait_name: The trait_name of this Phenotype.
        :type trait_name: str
        """

        self._trait_name = trait_name

    @property
    def trait_type(self) -> str:
        """Gets the trait_type of this Phenotype.


        :return: The trait_type of this Phenotype.
        :rtype: str
        """
        return self._trait_type

    @trait_type.setter
    def trait_type(self, trait_type: str):
        """Sets the trait_type of this Phenotype.


        :param trait_type: The trait_type of this Phenotype.
        :type trait_type: str
        """

        self._trait_type = trait_type

    @property
    def trait_description(self) -> str:
        """Gets the trait_description of this Phenotype.


        :return: The trait_description of this Phenotype.
        :rtype: str
        """
        return self._trait_description

    @trait_description.setter
    def trait_description(self, trait_description: str):
        """Sets the trait_description of this Phenotype.


        :param trait_description: The trait_description of this Phenotype.
        :type trait_description: str
        """

        self._trait_description = trait_description
