---
swagger: "2.0"
info:
  description: "Implements all the calls necessary for finding genomic markers for\
    \ germplasm, but doesn't conform to BrAPI."
  version: "0.0.1"
  title: "Divseek Canada MVP application API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
schemes:
- "https"
- "http"
paths:
  /taxon/:
    get:
      summary: "Returns all germplasm we have"
      operationId: "get_taxonomy"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Taxonomy"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /taxon/{id}:
    get:
      summary: "Returns all germplasm we have"
      operationId: "get_taxonomy_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique database ID for the taxonomy"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Taxonomy"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /germplasm/:
    get:
      summary: "Returns all germplasm we have"
      operationId: "get_germplasm"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Germplasm"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /germplasm/{id}:
    get:
      summary: "Returns all germplasm we have"
      operationId: "get_germplasm_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique database ID for the germplasm"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Germplasm"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /germplasm/taxon/{id}:
    get:
      summary: "Returns all germplasm we have by taxon"
      operationId: "get_germplasm_by_taxon"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique database ID for the taxon"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Germplasm"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /trait/:
    get:
      summary: "Returns all phenotypes we have"
      operationId: "get_traits"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Phenotype"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /trait/germplasm/{germplasmId}:
    get:
      summary: "Returns all phenotypes for a germplasm that we have"
      operationId: "get_traits_by_germplasm"
      produces:
      - "application/json"
      parameters:
      - name: "germplasmId"
        in: "path"
        description: "Unique database ID for the germplasm"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Phenotype"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /qtl/:
    get:
      summary: "Returns all the QTLs (Quantitative Trait Loci) we have"
      operationId: "get_qt_ls"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QTL"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /qtl/taxon/{taxonId}/trait/{traitId}:
    get:
      summary: "Returns all phenotypes for a germplasm that we have"
      operationId: "get_qtl_by_germplasm_trait"
      produces:
      - "application/json"
      parameters:
      - name: "germplasmId"
        in: "path"
        description: "Unique database ID for the germplasm"
        required: true
        type: "string"
      - name: "traitId"
        in: "path"
        description: "Unique database ID for the trait in question"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QTL"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /locus/qtl/{id}:
    get:
      summary: "Returns all phenotypes for a germplasm that we have"
      operationId: "get_locus_by_qtl"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique database ID for the QTL"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Locus"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /locus/taxon/{id}:
    get:
      summary: "Returns all phenotypes for a germplasm that we have"
      operationId: "get_locus_by_taxon"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique database ID for the taaon"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Locus"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  Germplasm:
    type: "object"
    required:
    - "general_identifier"
    - "id"
    - "name"
    - "taxonomy_id"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      general_identifier:
        type: "string"
      taxonomy_id:
        type: "integer"
        format: "int64"
    xml:
      name: "Germplasm"
    example:
      taxonomy_id: 6
      general_identifier: "general_identifier"
      name: "name"
      id: 0
  Taxonomy:
    type: "object"
    required:
    - "taxonomy_id"
    properties:
      taxonomy_id:
        type: "integer"
        format: "int64"
      genus:
        type: "string"
        example: "Helanthus"
      species:
        type: "string"
        example: "Helanthus annuus"
    xml:
      name: "Taxonomy"
    example:
      taxonomy_id: 0
      genus: "Helanthus"
      species: "Helanthus annuus"
  Query:
    type: "object"
    required:
    - "germplasmID"
    - "id"
    - "traitID"
    properties:
      id:
        type: "integer"
        format: "int64"
      traitID:
        type: "integer"
        format: "int64"
      germplasmID:
        type: "integer"
        format: "int64"
    xml:
      name: "Query"
  Locus:
    type: "object"
    required:
    - "basepair_end"
    - "basepair_start"
    - "locus_id"
    properties:
      locus_id:
        type: "integer"
        format: "int64"
      locus_name:
        type: "string"
      basepair_start:
        type: "integer"
        format: "int64"
      basepair_end:
        type: "integer"
        format: "int64"
      taxonomy_id:
        type: "integer"
        format: "int64"
    xml:
      name: "Locus"
    example:
      basepair_end: 1
      basepair_start: 6
      taxonomy_id: 5
      locus_id: 0
      locus_name: "locus_name"
  QTL:
    type: "object"
    required:
    - "locus_id"
    - "qtl_id"
    - "trait_id"
    properties:
      qtl_id:
        type: "integer"
        format: "int64"
      locus_name:
        type: "string"
      trait_id:
        type: "integer"
        format: "int64"
      locus_id:
        type: "integer"
        format: "int64"
    xml:
      name: "QTL"
    example:
      locus_id: 1
      qtl_id: 0
      locus_name: "locus_name"
      trait_id: 6
  Phenotype:
    type: "object"
    properties:
      trait_id:
        type: "integer"
        format: "int64"
      trait_name:
        type: "string"
      trait_type:
        type: "string"
        example: "protein"
      trait_description:
        type: "string"
    xml:
      name: "Trait"
    example:
      trait_description: "trait_description"
      trait_name: "trait_name"
      trait_id: 0
      trait_type: "protein"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
